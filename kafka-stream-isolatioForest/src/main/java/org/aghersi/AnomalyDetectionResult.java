/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.aghersi;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AnomalyDetectionResult extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7687870221816644140L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AnomalyDetectionResult\",\"namespace\":\"org.aghersi\",\"fields\":[{\"name\":\"date\",\"type\":\"string\"},{\"name\":\"adj_close\",\"type\":[\"double\",\"null\"]},{\"name\":\"score\",\"type\":[\"double\",\"null\"]},{\"name\":\"dynamic_threshold\",\"type\":[\"double\",\"null\"]},{\"name\":\"method\",\"type\":\"string\"},{\"name\":\"detected_time\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AnomalyDetectionResult> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AnomalyDetectionResult> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AnomalyDetectionResult> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AnomalyDetectionResult> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AnomalyDetectionResult> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AnomalyDetectionResult to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AnomalyDetectionResult from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AnomalyDetectionResult instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AnomalyDetectionResult fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence date;
  private java.lang.Double adj_close;
  private java.lang.Double score;
  private java.lang.Double dynamic_threshold;
  private java.lang.CharSequence method;
  private java.lang.CharSequence detected_time;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AnomalyDetectionResult() {}

  /**
   * All-args constructor.
   * @param date The new value for date
   * @param adj_close The new value for adj_close
   * @param score The new value for score
   * @param dynamic_threshold The new value for dynamic_threshold
   * @param method The new value for method
   * @param detected_time The new value for detected_time
   */
  public AnomalyDetectionResult(java.lang.CharSequence date, java.lang.Double adj_close, java.lang.Double score, java.lang.Double dynamic_threshold, java.lang.CharSequence method, java.lang.CharSequence detected_time) {
    this.date = date;
    this.adj_close = adj_close;
    this.score = score;
    this.dynamic_threshold = dynamic_threshold;
    this.method = method;
    this.detected_time = detected_time;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return date;
    case 1: return adj_close;
    case 2: return score;
    case 3: return dynamic_threshold;
    case 4: return method;
    case 5: return detected_time;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: date = (java.lang.CharSequence)value$; break;
    case 1: adj_close = (java.lang.Double)value$; break;
    case 2: score = (java.lang.Double)value$; break;
    case 3: dynamic_threshold = (java.lang.Double)value$; break;
    case 4: method = (java.lang.CharSequence)value$; break;
    case 5: detected_time = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'date' field.
   * @return The value of the 'date' field.
   */
  public java.lang.CharSequence getDate() {
    return date;
  }


  /**
   * Sets the value of the 'date' field.
   * @param value the value to set.
   */
  public void setDate(java.lang.CharSequence value) {
    this.date = value;
  }

  /**
   * Gets the value of the 'adj_close' field.
   * @return The value of the 'adj_close' field.
   */
  public java.lang.Double getAdjClose() {
    return adj_close;
  }


  /**
   * Sets the value of the 'adj_close' field.
   * @param value the value to set.
   */
  public void setAdjClose(java.lang.Double value) {
    this.adj_close = value;
  }

  /**
   * Gets the value of the 'score' field.
   * @return The value of the 'score' field.
   */
  public java.lang.Double getScore() {
    return score;
  }


  /**
   * Sets the value of the 'score' field.
   * @param value the value to set.
   */
  public void setScore(java.lang.Double value) {
    this.score = value;
  }

  /**
   * Gets the value of the 'dynamic_threshold' field.
   * @return The value of the 'dynamic_threshold' field.
   */
  public java.lang.Double getDynamicThreshold() {
    return dynamic_threshold;
  }


  /**
   * Sets the value of the 'dynamic_threshold' field.
   * @param value the value to set.
   */
  public void setDynamicThreshold(java.lang.Double value) {
    this.dynamic_threshold = value;
  }

  /**
   * Gets the value of the 'method' field.
   * @return The value of the 'method' field.
   */
  public java.lang.CharSequence getMethod() {
    return method;
  }


  /**
   * Sets the value of the 'method' field.
   * @param value the value to set.
   */
  public void setMethod(java.lang.CharSequence value) {
    this.method = value;
  }

  /**
   * Gets the value of the 'detected_time' field.
   * @return The value of the 'detected_time' field.
   */
  public java.lang.CharSequence getDetectedTime() {
    return detected_time;
  }


  /**
   * Sets the value of the 'detected_time' field.
   * @param value the value to set.
   */
  public void setDetectedTime(java.lang.CharSequence value) {
    this.detected_time = value;
  }

  /**
   * Creates a new AnomalyDetectionResult RecordBuilder.
   * @return A new AnomalyDetectionResult RecordBuilder
   */
  public static org.aghersi.AnomalyDetectionResult.Builder newBuilder() {
    return new org.aghersi.AnomalyDetectionResult.Builder();
  }

  /**
   * Creates a new AnomalyDetectionResult RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AnomalyDetectionResult RecordBuilder
   */
  public static org.aghersi.AnomalyDetectionResult.Builder newBuilder(org.aghersi.AnomalyDetectionResult.Builder other) {
    if (other == null) {
      return new org.aghersi.AnomalyDetectionResult.Builder();
    } else {
      return new org.aghersi.AnomalyDetectionResult.Builder(other);
    }
  }

  /**
   * Creates a new AnomalyDetectionResult RecordBuilder by copying an existing AnomalyDetectionResult instance.
   * @param other The existing instance to copy.
   * @return A new AnomalyDetectionResult RecordBuilder
   */
  public static org.aghersi.AnomalyDetectionResult.Builder newBuilder(org.aghersi.AnomalyDetectionResult other) {
    if (other == null) {
      return new org.aghersi.AnomalyDetectionResult.Builder();
    } else {
      return new org.aghersi.AnomalyDetectionResult.Builder(other);
    }
  }

  /**
   * RecordBuilder for AnomalyDetectionResult instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AnomalyDetectionResult>
    implements org.apache.avro.data.RecordBuilder<AnomalyDetectionResult> {

    private java.lang.CharSequence date;
    private java.lang.Double adj_close;
    private java.lang.Double score;
    private java.lang.Double dynamic_threshold;
    private java.lang.CharSequence method;
    private java.lang.CharSequence detected_time;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.aghersi.AnomalyDetectionResult.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.adj_close)) {
        this.adj_close = data().deepCopy(fields()[1].schema(), other.adj_close);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.score)) {
        this.score = data().deepCopy(fields()[2].schema(), other.score);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.dynamic_threshold)) {
        this.dynamic_threshold = data().deepCopy(fields()[3].schema(), other.dynamic_threshold);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.method)) {
        this.method = data().deepCopy(fields()[4].schema(), other.method);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.detected_time)) {
        this.detected_time = data().deepCopy(fields()[5].schema(), other.detected_time);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing AnomalyDetectionResult instance
     * @param other The existing instance to copy.
     */
    private Builder(org.aghersi.AnomalyDetectionResult other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.date)) {
        this.date = data().deepCopy(fields()[0].schema(), other.date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.adj_close)) {
        this.adj_close = data().deepCopy(fields()[1].schema(), other.adj_close);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.score)) {
        this.score = data().deepCopy(fields()[2].schema(), other.score);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dynamic_threshold)) {
        this.dynamic_threshold = data().deepCopy(fields()[3].schema(), other.dynamic_threshold);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.method)) {
        this.method = data().deepCopy(fields()[4].schema(), other.method);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.detected_time)) {
        this.detected_time = data().deepCopy(fields()[5].schema(), other.detected_time);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'date' field.
      * @return The value.
      */
    public java.lang.CharSequence getDate() {
      return date;
    }


    /**
      * Sets the value of the 'date' field.
      * @param value The value of 'date'.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder setDate(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.date = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'date' field has been set.
      * @return True if the 'date' field has been set, false otherwise.
      */
    public boolean hasDate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'date' field.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder clearDate() {
      date = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'adj_close' field.
      * @return The value.
      */
    public java.lang.Double getAdjClose() {
      return adj_close;
    }


    /**
      * Sets the value of the 'adj_close' field.
      * @param value The value of 'adj_close'.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder setAdjClose(java.lang.Double value) {
      validate(fields()[1], value);
      this.adj_close = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'adj_close' field has been set.
      * @return True if the 'adj_close' field has been set, false otherwise.
      */
    public boolean hasAdjClose() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'adj_close' field.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder clearAdjClose() {
      adj_close = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'score' field.
      * @return The value.
      */
    public java.lang.Double getScore() {
      return score;
    }


    /**
      * Sets the value of the 'score' field.
      * @param value The value of 'score'.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder setScore(java.lang.Double value) {
      validate(fields()[2], value);
      this.score = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'score' field has been set.
      * @return True if the 'score' field has been set, false otherwise.
      */
    public boolean hasScore() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'score' field.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder clearScore() {
      score = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'dynamic_threshold' field.
      * @return The value.
      */
    public java.lang.Double getDynamicThreshold() {
      return dynamic_threshold;
    }


    /**
      * Sets the value of the 'dynamic_threshold' field.
      * @param value The value of 'dynamic_threshold'.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder setDynamicThreshold(java.lang.Double value) {
      validate(fields()[3], value);
      this.dynamic_threshold = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'dynamic_threshold' field has been set.
      * @return True if the 'dynamic_threshold' field has been set, false otherwise.
      */
    public boolean hasDynamicThreshold() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'dynamic_threshold' field.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder clearDynamicThreshold() {
      dynamic_threshold = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'method' field.
      * @return The value.
      */
    public java.lang.CharSequence getMethod() {
      return method;
    }


    /**
      * Sets the value of the 'method' field.
      * @param value The value of 'method'.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder setMethod(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.method = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'method' field has been set.
      * @return True if the 'method' field has been set, false otherwise.
      */
    public boolean hasMethod() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'method' field.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder clearMethod() {
      method = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'detected_time' field.
      * @return The value.
      */
    public java.lang.CharSequence getDetectedTime() {
      return detected_time;
    }


    /**
      * Sets the value of the 'detected_time' field.
      * @param value The value of 'detected_time'.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder setDetectedTime(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.detected_time = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'detected_time' field has been set.
      * @return True if the 'detected_time' field has been set, false otherwise.
      */
    public boolean hasDetectedTime() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'detected_time' field.
      * @return This builder.
      */
    public org.aghersi.AnomalyDetectionResult.Builder clearDetectedTime() {
      detected_time = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AnomalyDetectionResult build() {
      try {
        AnomalyDetectionResult record = new AnomalyDetectionResult();
        record.date = fieldSetFlags()[0] ? this.date : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.adj_close = fieldSetFlags()[1] ? this.adj_close : (java.lang.Double) defaultValue(fields()[1]);
        record.score = fieldSetFlags()[2] ? this.score : (java.lang.Double) defaultValue(fields()[2]);
        record.dynamic_threshold = fieldSetFlags()[3] ? this.dynamic_threshold : (java.lang.Double) defaultValue(fields()[3]);
        record.method = fieldSetFlags()[4] ? this.method : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.detected_time = fieldSetFlags()[5] ? this.detected_time : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AnomalyDetectionResult>
    WRITER$ = (org.apache.avro.io.DatumWriter<AnomalyDetectionResult>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AnomalyDetectionResult>
    READER$ = (org.apache.avro.io.DatumReader<AnomalyDetectionResult>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.date);

    if (this.adj_close == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.adj_close);
    }

    if (this.score == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.score);
    }

    if (this.dynamic_threshold == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeDouble(this.dynamic_threshold);
    }

    out.writeString(this.method);

    out.writeString(this.detected_time);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.date = in.readString(this.date instanceof Utf8 ? (Utf8)this.date : null);

      if (in.readIndex() != 0) {
        in.readNull();
        this.adj_close = null;
      } else {
        this.adj_close = in.readDouble();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.score = null;
      } else {
        this.score = in.readDouble();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.dynamic_threshold = null;
      } else {
        this.dynamic_threshold = in.readDouble();
      }

      this.method = in.readString(this.method instanceof Utf8 ? (Utf8)this.method : null);

      this.detected_time = in.readString(this.detected_time instanceof Utf8 ? (Utf8)this.detected_time : null);

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.date = in.readString(this.date instanceof Utf8 ? (Utf8)this.date : null);
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.adj_close = null;
          } else {
            this.adj_close = in.readDouble();
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.score = null;
          } else {
            this.score = in.readDouble();
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.dynamic_threshold = null;
          } else {
            this.dynamic_threshold = in.readDouble();
          }
          break;

        case 4:
          this.method = in.readString(this.method instanceof Utf8 ? (Utf8)this.method : null);
          break;

        case 5:
          this.detected_time = in.readString(this.detected_time instanceof Utf8 ? (Utf8)this.detected_time : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










